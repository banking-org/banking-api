openapi: 3.0.3
info:
  title: Banking app
  description: A simple banking app api
  version: 0.3.0
servers:
  - url: 'https'
paths:
  /ping:
    get:
      tags:
        - Health
      responses:
        200:
          description: OK
          content:
            plain/text:
              schema:
                type: string
              example: pong

  /account:
    get:
      tags:
        - Account
      operationId: getAllAccounts
      summary: get a list of all accounts
      responses:
        200:
          description: account list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountDto'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    post:
      tags:
        - Account
      operationId: createAccount
      summary: create a bank account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpSetAccountDto'
      responses:
        201:
          description: created account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountDto'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /account/{id}:
    get:
      tags:
        - Account
      operationId: getAccountById
      summary: get account by an id
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        200:
          description: account data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountDto'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    put:
      tags:
        - Account
      operationId: updateAccountById
      summary: update account by an id
      parameters:
        - $ref: '#/components/parameters/idPath'
      responses:
        200:
          description: updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountDto'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /money/withdraw:
    post:
      tags:
        - Money
      summary: withdraw money from an account
      operationId: withdrawMoney
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawMoneyPayload'
      responses:
        200:
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyData'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /money/deposit:
    post:
      tags:
        - Money
      summary: add some money to account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonDepositPayload'
      responses:
        200:
          description: transaction success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyData'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /money/transfer:
    put:
      tags:
        - Money
      summary: transfer money to another account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferMoneyPayload'
      responses:
        200:
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyData'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /statements/{id}:
    get:
      tags:
        - Statement
      summary: get account statements
      parameters:
        - $ref: '#/components/parameters/idPath'
        - $ref: '#/components/parameters/fromDate'
        - $ref: '#/components/parameters/toDate'
      responses:
        200:
          description: all statements matched by request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountStatement'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

components:
  parameters:
    ## Common path with /{id} param
    idPath:
      required: true
      name: id
      in: path
      schema:
        type: number

    fromDate:
      name: from
      in: query
      description: Start date for statement retrieval
      required: true
      schema:
        type: string
        format: date

    toDate:
      name: to
      in: query
      description: End date for statement retrieval
      required: true
      schema:
        type: string
        format: date

  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorPayload'
          example:
            status: 400
            message: Bad request

    '404':
      description: resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorPayload'
          example:
            status: 404
            message: resource not found

    '500':
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorPayload'
          example:
            status: 500
            message: cannot perform operations now

  schemas:
    ResponseErrorPayload:
      description: a blueprint for the response
      type: object
      properties:
        status:
          type: number
          example: 404
        message:
          type: string

    UpSetAccountDto:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
          format: date
          description: age should be greater than 21
        netMonthSalary:
          type: number
          format: double
        accountNumber:
          type: string
        type:
          type: string
          enum:
            - NORMAL
            - DEBIT
          default:
            NORMAL
      required:
        - firstname
        - lastname
        - birthdate
        - netMonthSalary
        - accountNumber

    GetAccountDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/UpSetAccountDto'
      properties:
        id:
          type: number

    WithdrawMoneyPayload:
      type: object
      properties:
        accountId:
          type: number
        amount:
          type: number
          format: double
          description: should not exceed 1/3 of the net salary
      required:
        - accountId
        - amount

    WithdrawalDto:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/GetAccountDto'

    CommonDepositPayload:
      type: object
      properties:
        accountId:
          type: number
        amount:
          type: number
          format: double
        label:
          type: string
        effectDate:
          type: string
          format: date
        registerDate:
          type: string
          format: date

    TransferMoneyPayload:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommonDepositPayload'
      properties:
        accountIdTarget:
          type: number
        status:
          type: string
          enum:
            - PENDING
            - CANCELED
            - SUCCESS

    MoneyData:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/GetAccountDto'
        current_amount:
          type: number
          format: double
        updatedAt:
          type: string
          format: timestamp
        currentInterest:
          type: number
          description: a percentage of interest a week for debit account type

    AccountStatement:
      type: object
      properties:
        date:
          type: string
          format: date
        reference:
          type: string
        label:
          type: string
        withdraw:
          type: number
          format: double
        deposit:
          type: number
          format: double
        balance:
          type: number
          format: double

    InterestPercentPayload:
      type: object
      properties:
        firstWeek:
          type: number
        nextWeeks:
          type: number
      required:
        - firstWeek

    ## EPIC 2
    MoneyState:
      type: object
      properties:
        current_balance:
          type: number
        total_outcomes:
          type: number
        total_incomes:
          type: number